#include <stdio.h>
#include <stdlib.h>

typedef struct node{
    int num;
    int x_power;
    struct node *next;
}Node;

typedef struct {
    Node *first;
}Polynomial;

Polynomial polynomialCreate() {
    Polynomial polynomial;
    polynomial.first = NULL;
    return polynomial;
}

Node* createNodePtr(int num, int x_power) {
    Node *new_node = (Node *)malloc(sizeof(Node));
    new_node->num = num;
    new_node->x_power = x_power;
    new_node->next = NULL;
    return new_node;
}

void show(Polynomial polynomial) {
    Node *current = polynomial.first;
    while(current != NULL) {
        printf("TEST: num: %d, x_power:%d\n", current->num, current->x_power);
        current = current->next;
    }
}


Polynomial getPolynomialFromFile(char *filePath) {
    FILE *fp;
    if ((fp = fopen(filePath, "r")) == NULL) {
        printf("open file error!!\n");
        exit(0);
    }
    int coefficient;
    int power;

    Polynomial polynomial = polynomialCreate();
    Node *preNode;
    int first = 1;
    while(fscanf(fp, "%dx^%d", &coefficient, &power)!=EOF) {
        Node *node = createNodePtr(coefficient, power);
        if(first) {
            polynomial.first = node;
            first = 0;
        } else {
            preNode->next = node;
        }
        preNode = node;

    }
    return polynomial;
}

Polynomial addTwoPolynomial(Polynomial polynomial_1, Polynomial polynomial_2) {
    Node *p1_current = polynomial_1.first;
    Node *p2_current = polynomial_2.first;

    while(p1_current != NULL || p2_current != NULL) {




        // printf("TEST: num: %d, x_power:%d\n", current->num, current->x_power);
        // current = current->next;
    }



}





int main() {
   
    Polynomial polynomial_1 = getPolynomialFromFile("Poly1.txt");
    Polynomial polynomial_2 = getPolynomialFromFile("Poly2.txt");

    show(polynomial_1);
    show(polynomial_2);
    
    return 0;
}